# from aiogram import Dispatcher, types
# from aiogram.types import ReplyKeyboardRemove
# from aiogram.dispatcher.filters import Text
# from keyboards.kb_client import *
# from construct_bot import bot
# import db
#
#
#
#
#
# async def products_category(msg: types.Message):
#
#     await msg.answer('<i>üëÄ –ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?</i>',
#                      parse_mode=types.ParseMode.HTML, reply_markup=ReplyKeyboardRemove())
#     await msg.answer('<i>‚ú® –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–ª–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –ø–æ–∏—Å–∫–æ–º</i>, <b>/search</b>', reply_markup=ikb_products_category(),
#                      parse_mode=types.ParseMode.HTML)
#
# async def call_get_product(call: types.CallbackQuery):
#     category_id = call.products_data
#     cursor, connection = db.get_connection()
#
#     cursor.execute('select * from ')
#     await call.answer()
#
# async def reference_information(msg: types.Message):
#     await msg.answer("""
#     <pre>–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å —Ç–æ–≤–∞—Ä—ã –∏ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ –æ–Ω–ª–∞–π–Ω –∏–ª–∏ –ø–æ–∑–≤–æ–Ω–∏—Ç—å –≤ –æ—Ç–¥–µ–ª –ø—Ä–æ–¥–∞–∂: \n –º–µ–Ω–µ–¥–∂–µ—Ä—ã
# –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É—é—Ç –≤–∞—Å, –ø—Ä–∏–º—É—Ç –∑–∞–∫–∞–∑ –∏ –æ—Ñ–æ—Ä–º—è—Ç –¥–æ—Å—Ç–∞–≤–∫—É —É–¥–æ–±–Ω—ã–º –¥–ª—è –≤–∞—Å —Å–ø–æ—Å–æ–±–æ–º.</pre>
# """, reply_markup=kb_reference_information(), parse_mode=types.ParseMode.HTML)
#
#
#
# async def back_to_main(msg: types.Message):
#     await msg.answer('–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é', reply_markup=kb_main())
#
# async def delivery_condition(msg: types.Message):
#     await msg.answer("""
#     –ú—ã –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ–º –¥–æ—Å—Ç–∞–≤–∫—É –ø–æ –≤—Å–µ–º—É <b>–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—É</b>, –∞ —Ç–∞–∫–∂–µ –ø–æ <b>–°–ù–ì</b>.
#
#         <b>C—Ä–æ–∫–∏ –¥–æ—Å—Ç–∞–≤–∫–∏ –ø–æ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—É üá∞üáø:</b>
#
#                 <u>–ê—Å—Ç–∞–Ω–∞, –ö–∞—Ä–∞–≥–∞–Ω–¥–∞, –¢–µ–º–∏—Ä—Ç–∞—É</u> - <b>1-3 –¥–Ω—è</b>
#                 <u>–ê–∫—Ç–æ–±–µ, –ê–∫—Ç–∞—É, –ê—Ç—ã—Ä–∞—É, –£—Ä–∞–ª—å—Å–∫</u> ‚Äî <b>6-10 –¥–Ω–µ–π</b>
#                –ö–æ—Å—Ç–∞–Ω–∞–π, –ö–æ–∫—à–µ—Ç–∞—É, –ü–∞–≤–ª–æ–¥–∞—Ä, –ü–µ—Ç—Ä–æ–ø–∞–≤–ª–æ–≤—Å–∫, –°–µ–º–µ–π, –£—Å—Ç—å-–ö–∞–º–µ–Ω–æ–≥–æ—Ä—Å–∫, –®—ã–º–∫–µ–Ω—Ç, –¢–∞—Ä–∞–∑, –ñ–µ–∑–∫–∞–∑–≥–∞–Ω, –°–∞—Ç–ø–∞–µ–≤, –ö—ã–∑—ã–ª–æ—Ä–¥–∞ - <b>2-5 –¥–Ω–µ–π</b>
#
#     """, parse_mode=types.ParseMode.HTML, disable_web_page_preview=True, reply_markup=kb_main_back('‚Ñπ –°–ø—Ä–∞–≤–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è'))
#
#     await msg.answer("""
#          <b><i>–£—Å–ª–æ–≤–∏–µ –¥–æ—Å—Ç–∞–≤–∫–∏ –ø–æ –°–ù–ì –∏  –¥—Ä—É–≥–∏–º —Å—Ç—Ä–∞–Ω–∞–º:
#                 üá¶üáø üá¶üá≤ üáßüáæ üá∞üá¨ üá≤üá© üá∑üá∫ üáπüáØ üá∫üáø :</i></b>
#
#                 –î–æ—Å—Ç–∞–≤–∫–∞ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã–º–∏ –∫–æ–º–ø–∞–Ω–∏—è–º–∏ -  –≠–Ω–µ—Ä–≥–∏—è, Gtdel. –°—Ä–æ–∫–∏ –¥–æ—Å—Ç–∞–≤–∫–∏ –≤ —Å—Ä–µ–¥–Ω–µ–º <pre>5-12 –¥–Ω–µ–π</pre>.
#
#         """, parse_mode=types.ParseMode.HTML, disable_web_page_preview=True)
#     await msg.answer("""
#         <i>–ï—Å–ª–∏ —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞ –º–µ–Ω—å—à–µ <u>20000‚Ç∏</u> —Ç–æ–≥–¥–∞  –¥–æ—Å—Ç–∞–≤–ª—è—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –∫—É—Ä—å–µ—Ä—Å–∫–∏–µ —Å–ª—É–∂–±—ã –∏–ª–∏ —Å–∞–º–æ–≤—ã–≤–æ–∑.</i>
#         üö∂ –°–∞–º–æ–≤—ã–≤–æ–∑ —Å–æ —Å–∫–ª–∞–¥–∞ <a href="https://go.2gis.com/y8i6uc">–ê–ª–º–∞—Ç—ã, –ú–∞—Å–∞–Ω—á–∏ 23–≥/1</a>
#         """, parse_mode=types.ParseMode.HTML, disable_web_page_preview=True)
#
# async def favorites(msg: types.Message):
#     await msg.answer('–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤.')
#     await msg.answer('–ù–∞–∂–∏–º–∞–π—Ç–µ –Ω–∞ ‚ô° –≤–æ–∑–ª–µ —Ç–æ–≤–∞—Ä–æ–≤, —á—Ç–æ–±—ã –Ω–µ –ø–æ—Ç–µ—Ä—è—Ç—å –∏—Ö')
#
# async def payment_method(msg: types.Message):
#     await msg.answer(msg.text)
#     await msg.answer("""<b>
#                     üí∞ –ù–∞–ª–∏—á–Ω—ã–º–∏
# üí≥ –ü–ª–∞—Ç–µ–∂–Ω–æ–π –∫–∞—Ä—Ç–æ–π <pre>(POS-—Ç–µ—Ä–º–∏–Ω–∞–ª, Visa –∏–ª–∏ MasterCard)</pre>
# üü• –ê —Ç–∞–∫–∂–µ —Å –ø–æ–º–æ—â—å—é Kaspi QR</b>""", parse_mode=types.ParseMode.HTML, reply_markup=kb_to_main())
#
#
# async def currency(msg: types.Message):
#     await msg.answer('–í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å:', reply_markup=ikb_currency_list())
#
# async def address(msg: types.Message):
#     await msg.answer("""
#
#
#
#     """, parse_mode=types.ParseMode.HTML)
#
#     await bot.send_location(msg.from_user.id, 43.26072, 76.927077)
#
# async def contacts(msg: types.Message):
#     await bot.send_contact(msg.from_user.id, '+7 (705) 525-96-90', 'Berik')
#     await bot.send_contact(msg.from_user.id, '+7 (700) 200-47-33', 'Bek', reply_markup=ikb_contacts())
#
# async def call_get_product(call: types.CallbackQuery):
#     await call.message.answer('He')
#     await call.answer()
#
#
# def register_handlers_client(dp: Dispatcher):
#     dp.register_message_handler(cmd_start, commands='start')
#     dp.register_message_handler(products_category, Text(equals='üì¶ –ù–∞—à–∏ —Ç–æ–≤–∞—Ä—ã'))
#     dp.register_message_handler(back_to_main, Text(equals='üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é'))
#     dp.register_message_handler(delivery_condition, Text(equals='üöö –£—Å–ª–æ–≤–∏–µ –¥–æ—Å—Ç–∞–≤–∫–∏'))
#     dp.register_message_handler(payment_method, Text(equals='üí≥ –°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã'))
#     dp.register_message_handler(reference_information, Text(equals='‚Ñπ –°–ø—Ä–∞–≤–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è'))
#     dp.register_message_handler(favorites, Text(equals='‚ô° –ò–∑–±—Ä–∞–Ω–Ω–æ–µ'))
#     dp.register_message_handler(currency, Text(equals='üí± –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç'))
#     dp.register_message_handler(contacts, Text(equals='üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã'))
#     dp.register_message_handler(address, Text(equals='üó∫ –ú—ã –Ω–∞ –∫–∞—Ä—Ç–µ'))
#     dp.register_callback_query_handler(call_get_product)
#
#
#
